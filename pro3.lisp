(defun largest-prime-factor (n)
  (labels ((rec (num acc)
	     (cond ((= 1 num) acc)
		   ((<= num 2) num)
		   (t (let ((fac (do ((i 2 (1+ i)))
				     ((or (>= i num)
					  (zerop (mod num i))) i))))
			(rec (/ num fac) fac))))))
    (rec n 1)))