(defun max-route-sum (table)
  (let* ((d (1- (car (array-dimensions table))))
	 (aux (make-array `(,d ,d) :initial-element nil)))
    (labels ((rec (i j)
	       (cond ((= d (+ i j))
		      (aref table i j))
		     (t (let ((cache (aref aux i j)))
			  (or cache
			      (let* ((tmp (max (rec (1+ i) j)
					       (rec i (1+ j))))
				     (val (+ (aref table i j) tmp)))
				(setf (aref aux i j) val)
				val)))))))
      (rec 0 0))))

(defparameter *tbl*
  (make-array '(15 15)
	      :initial-contents '((75 64 82 10 65 34 67 92 33 29 14 57 48 31 23)
				  (95 47 87 47 03 63 70 70 94 51 17 29 40 04 00)
				  (17 35 82 75 07 16 80 16 97 68 27 87 60 00 00)
				  (18 04 23 73 06 40 37 52 39 50 69 53 00 00 00)
				  (20 01 77 28 83 32 91 78 58 16 38 00 00 00 00)
				  (19 02 04 56 47 43 17 43 73 93 00 00 00 00 00)
				  (88 65 26 33 25 73 91 30 73 00 00 00 00 00 00)
				  (99 41 72 65 77 14 67 98 00 00 00 00 00 00 00)
				  (41 48 44 28 17 53 70 00 00 00 00 00 00 00 00)
				  (41 71 33 38 89 09 00 00 00 00 00 00 00 00 00)
				  (53 11 52 68 23 00 00 00 00 00 00 00 00 00 00)
				  (70 71 04 27 00 00 00 00 00 00 00 00 00 00 00)
				  (91 66 98 00 00 00 00 00 00 00 00 00 00 00 00)
				  (63 62 00 00 00 00 00 00 00 00 00 00 00 00 00)
				  (04 00 00 00 00 00 00 00 00 00 00 00 00 00 00))))

(defun pro18 () (max-route-sum *tbl*))